#!/bin/bash

# Set defaults
if test x"${debug}" = x"true"; then
    export CONFIG_SHELL="/bin/bash -x"
else
    export CONFIG_SHELL="/bin/bash"
fi

user_workspace="$PWD"

OPTS="`getopt -o w:t:h -l tarball:,workspace:,help`"
while test $# -gt 0; do
    echo 1 = "$1"
    case $1 in
	-w|--workspace) user_workspace=$2 ;;
	-t|--tarball) tarball=$2 ;;
        -h|--help) usage ;;
	--) break ;;
    esac
    shift
done

if test -e ${user_workspace}; then
    cat << EOF > ${user_workspace}/BUILD-INFO.txt
Format-Version: 0.5

Files-Pattern: *
License-Type: open
EOF
fi

testdir=${user_workspace}/_test

# Create a test directory
if test ! -d ${testdir}; then
    mkdir -p ${testdir}
fi

# Use the newly created build directory
cd ${testdir}

file=`basename ${tarball}`

# Download the toolchain binary tarball
if test ! -e ${testdir}/${file}; then
    wget ${tarball} --directory=${testdir}
    if test $? -gt 0; then
	echo "ERROR: ${tarball} doesn't exist on remote machine!"
	exit $?
    fi
fi

# Extract the tarball
dir="`echo ${file} | sed -e 's:.tar.xz::'`"
if test ! -d ${dir}; then
    tar Jxvf ${testdir}/${file} --directory=${testdir}
    if test $? -gt 0; then
	echo "ERROR: ${tarball} is corrupted!"
	exit $?
    fi
fi

# Create a simple test case
if test ! -e ${testdir}/hello.cpp; then
    # Create the usual Hello World! test case
    cat <<EOF > ${testdir}/hello.cpp
#include <iostream>
int
main(int argc, char *argv[])
{
    std::cout << "Hello World!" << std::endl; 
}
EOF
fi

target="`echo ${dir} | egrep -o "arm.*|aarch.*"`"

# Compile the test case
rm -f ${testdir}/hi
${dir}/bin/${target}-c++ -o ${testdir}/hi ${testdir}/hello.cpp -static

if test -e ${testdir}/hi; then
    exit 0
else
    exit 1
fi

