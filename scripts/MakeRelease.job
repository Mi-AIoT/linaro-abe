#!/bin/bash

cat << EOF > ${WORKSPACE}/BUILD-INFO.txt
Format-Version: 0.5

Files-Pattern: *
License-Type: open
EOF


if test x"${target}" != x"native" -a x"${target}" != x; then
    platform="--target ${target}"
fi

export CONFIG_SHELL="/bin/bash"
shared="/home/buildslave/workspace/shared/"
cbuild_dir="${user_workspace}/cbuildv2"
user_snapshots="${user_workspace}/snapshots"

# Create a build directory
if test ! -d ${user_workspace}/_build; then
    mkdir -p ${user_workspace}/_build
else
    rm -fr ${user_workspace}/_build/* ${user_workspace}/_build/sysroots/*
fi

# Use the newly created build directory
cd ${user_workspace}/_build

if ! test -e host.conf; then
  $CONFIG_SHELL ${cbuild_dir}/configure --with-local-snapshots=${user_snapshots} --with-git-reference-dir=${shared}/snapshots
fi

if test x"${tarbin}"; then
    tars="--tarbin"
else
    tars="--tarsrc --check"
fi
$CONFIG_SHELL ${cbuild_dir}/cbuild2.sh --disable update --release ${release} ${tars} gcc=${gcc_source} ${platform} -build all

# force a failure of cbuild2 has build problems.
if test $? -gt 0; then
  exit 1
fi

if test x"${tarbin}"; then
    binaries="/work/space/binaries/${release}/${target}"
    ssh toolchain64 "mkdir -p ${binaries}"
    scp ${user_snapshots}/*.xz ${user_snapshots}/*.asc toolchain64:${binaries}/
else
    bases="/work/cbuildv2/baselines/${release}/${target}"
    ssh toolchain64 "mkdir -p ${bases}"
    sums="`find -name \*.sum`"
    if test x"${sums}" != x; then
	scp ${sums}  toolchain64:${bases}/
    else
	echo "ERROR: No test resultswere found!"
    fi
fi
