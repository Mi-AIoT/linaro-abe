{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5935ad2a_1e97c139",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000072
      },
      "writtenOn": "2023-03-16T21:30:45Z",
      "side": 1,
      "message": "I have also manually tested the error path in case we have several dynamic linkers.\n",
      "revId": "8e985a14019529314bd6c5ebd9793d84e23904ce",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2c1c7879_a6cb237b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000532
      },
      "writtenOn": "2023-03-17T09:39:33Z",
      "side": 1,
      "message": "Fine for me",
      "revId": "8e985a14019529314bd6c5ebd9793d84e23904ce",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1f19ef26_e280a3d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2023-03-17T13:46:46Z",
      "side": 1,
      "message": "Thank you for the explanation! This looks good to me.",
      "revId": "8e985a14019529314bd6c5ebd9793d84e23904ce",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d404fb3_dd55f2b0",
        "filename": "lib/make.sh",
        "patchSetId": 3
      },
      "lineNbr": 502,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2023-03-16T21:42:41Z",
      "side": 1,
      "message": "Perhaps I\u0027m not seeing something, but if we entered the if statement in line 496 doesn\u0027t it mean that $dynamic_linker is empty and thus this if statement will never be entered?",
      "revId": "8e985a14019529314bd6c5ebd9793d84e23904ce",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ded37133_76104c9c",
        "filename": "lib/make.sh",
        "patchSetId": 3
      },
      "lineNbr": 502,
      "author": {
        "id": 1000072
      },
      "writtenOn": "2023-03-17T09:39:04Z",
      "side": 1,
      "message": "It is set below line 506 when we find a dynamic linker file. So this if line 502 is to check if we have several dynamic linkers, and return an error in that case (see Maxim\u0027s comment in the previous version of this patch)",
      "parentUuid": "4d404fb3_dd55f2b0",
      "revId": "8e985a14019529314bd6c5ebd9793d84e23904ce",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd488e3b_9d1687df",
        "filename": "lib/make.sh",
        "patchSetId": 3
      },
      "lineNbr": 502,
      "author": {
        "id": 1000532
      },
      "writtenOn": "2023-03-17T09:39:33Z",
      "side": 1,
      "message": "This condition is to catch if many dyn-loaders existing in the list. (see for loop in l.499, and assignment in l.506)\n\nIs this not always the case on 64-bits ? or only for x86_64 ? having a DL for 32-bit and another DL for 64-bit ?\n\nLooking at Maxim comment, and probably your experiments, I guess I m wrong.",
      "parentUuid": "4d404fb3_dd55f2b0",
      "revId": "8e985a14019529314bd6c5ebd9793d84e23904ce",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd7ced28_b254092e",
        "filename": "lib/make.sh",
        "patchSetId": 3
      },
      "lineNbr": 502,
      "author": {
        "id": 1000072
      },
      "writtenOn": "2023-03-17T12:30:13Z",
      "side": 1,
      "message": "Yes, we currently build glibc only once, for one ABI, but we still have:\nRTLDLIST\u003d\"/lib/ld-linux.so.2 /lib64/ld-linux-x86-64.so.2 /libx32/ld-linux-x32.so.2\"\nand we only install the second one (ld-linux-x86-64.so.2) but not under /lib64 for some reason.\n\nI\u0027m assuming that this list contains all the names theoretically supported, even if we build only one of them. And that we could have all the three of them if we ran three builds with the appropriate configuration flags (but then, we\u0027d need to fix this loops, but that\u0027s for the future if ever needed)",
      "parentUuid": "dd488e3b_9d1687df",
      "revId": "8e985a14019529314bd6c5ebd9793d84e23904ce",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    }
  ]
}