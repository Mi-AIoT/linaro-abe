{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c3a5620f_c428d62e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2023-05-24T20:37:42Z",
      "side": 1,
      "message": "Some questions...\n\nAlso, a couple of weeks ago I made a comment on validate_failures.py:\n\nhttps://review.linaro.org/c/toolchain/gcc-compare-results/+/44072/comment/8291c09d_cf2b016c/\n\nIf my comment there is relevant, could it be affecting CI results?",
      "revId": "98959482dd6244b3af9b8558a2b891581ef0ebd2",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a09d8118_04bb1fa7",
        "filename": "lib/make.sh",
        "patchSetId": 3
      },
      "lineNbr": 1088,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2023-05-24T20:37:42Z",
      "side": 1,
      "message": "This loses the \"# From ${BUILD_URL-$(pwd)}:\" comment that round-robin.sh:build_abe() puts at the beginning of the file before calling ABE. Is this a problem?\n\nAlso, I don\u0027t see a reason to move it to $baseline_flaky. At least the way round-robin.sh:build_abe() currently calls ABE, the file is empty (except for the comment I mentioned above). We can use it directly for $new_flaky.\n\nOr does this new approach depend on stable expected failures being provided separately from known flaky tests? If so, build_abe() needs to be changed accordingly.",
      "revId": "98959482dd6244b3af9b8558a2b891581ef0ebd2",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f370e027_c9fc9769",
        "filename": "lib/make.sh",
        "patchSetId": 3
      },
      "lineNbr": 1096,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2023-05-24T20:37:42Z",
      "side": 1,
      "message": "The baseline flaky tests are also in $expected_failures. $flaky_failures is used just as an output parameter.",
      "revId": "98959482dd6244b3af9b8558a2b891581ef0ebd2",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a158e6e_3cdef28b",
        "filename": "lib/make.sh",
        "patchSetId": 3
      },
      "lineNbr": 1141,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2023-05-24T20:37:42Z",
      "side": 1,
      "message": "Looking at validate_failures.py:CompareResults(), the flaky attribute in a line just causes it to be ignored from the manifest file so it doesn\u0027t matter whether it repeats a result without the flaky attribute, and it also doesn\u0027t matter whether it appears before or after the same result without the flaky attribute.",
      "revId": "98959482dd6244b3af9b8558a2b891581ef0ebd2",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b74612f_04df696e",
        "filename": "lib/make.sh",
        "patchSetId": 3
      },
      "lineNbr": 1148,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2023-05-24T20:37:42Z",
      "side": 1,
      "message": "Since $baseline_flaky is empty, this isn\u0027t necessary.",
      "revId": "98959482dd6244b3af9b8558a2b891581ef0ebd2",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a36eb316_97fe4d34",
        "filename": "lib/make.sh",
        "patchSetId": 3
      },
      "lineNbr": 1400,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2023-05-24T20:37:42Z",
      "side": 1,
      "message": "If a testcase.exp file contains one test that always fails, and one that is flaky, e.g.:\n\nRunning testcase.exp ...\nFAIL: This is a real failure\nFAIL: This is one is flaky\n\nWon\u0027t the lack of including $expected_failures cause the real failure to also be marked as flaky?",
      "revId": "98959482dd6244b3af9b8558a2b891581ef0ebd2",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    }
  ]
}