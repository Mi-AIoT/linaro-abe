{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4311c915_418313bf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1000532
      },
      "writtenOn": "2023-03-21T14:19:19Z",
      "side": 1,
      "message": "ok for me",
      "revId": "e98b6289e359a6b62062e7360eb3ac5051e28c85",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "483fc63f_61cbc7d7",
        "filename": "lib/make.sh",
        "patchSetId": 4
      },
      "lineNbr": 722,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2023-03-21T16:12:19Z",
      "side": 1,
      "message": "Very helpful documentation. Thanks!",
      "revId": "e98b6289e359a6b62062e7360eb3ac5051e28c85",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d4b752a_283c7f79",
        "filename": "lib/make.sh",
        "patchSetId": 4
      },
      "lineNbr": 728,
      "author": {
        "id": 1000092
      },
      "writtenOn": "2023-03-22T10:45:49Z",
      "side": 1,
      "message": "Needs to be local.",
      "range": {
        "startLine": 728,
        "startChar": 8,
        "endLine": 728,
        "endChar": 12
      },
      "revId": "e98b6289e359a6b62062e7360eb3ac5051e28c85",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9a6a98b8_68e18414",
        "filename": "lib/make.sh",
        "patchSetId": 4
      },
      "lineNbr": 728,
      "author": {
        "id": 1000072
      },
      "writtenOn": "2023-03-22T14:45:56Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6d4b752a_283c7f79",
      "range": {
        "startLine": 728,
        "startChar": 8,
        "endLine": 728,
        "endChar": 12
      },
      "revId": "e98b6289e359a6b62062e7360eb3ac5051e28c85",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "878e0f54_66eaf5e9",
        "filename": "lib/make.sh",
        "patchSetId": 4
      },
      "lineNbr": 817,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2023-03-21T16:12:19Z",
      "side": 1,
      "message": "This line wasn\u0027t changed in your patch (it\u0027s been like this since 2021) but I\u0027m pointing it out since it could affect your code:\n\nThe comparison has an \u0027x\u0027 only on the right side. It should either have an \u0027x\u0027 on the left side as well or be rewritten as [ -n \"$extra_runtestflags\" ]\n\nI can submit a separate patch if you think this isn\u0027t relevant to your change and should be dealt with separately.",
      "revId": "e98b6289e359a6b62062e7360eb3ac5051e28c85",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0368d524_9f45fd5c",
        "filename": "lib/make.sh",
        "patchSetId": 4
      },
      "lineNbr": 824,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2023-03-21T16:12:19Z",
      "side": 1,
      "message": "Instead of doing this here, would it be hard to convert extra_runtestflags to an array?\nI believe this logic could then be put in set_package()",
      "revId": "e98b6289e359a6b62062e7360eb3ac5051e28c85",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2f59531_1d29992a",
        "filename": "lib/make.sh",
        "patchSetId": 4
      },
      "lineNbr": 853,
      "author": {
        "id": 1000092
      },
      "writtenOn": "2023-03-22T10:45:49Z",
      "side": 1,
      "message": "Unrelated to this patch, but I wonder why this is not \"check\".",
      "range": {
        "startLine": 853,
        "startChar": 20,
        "endLine": 853,
        "endChar": 33
      },
      "revId": "e98b6289e359a6b62062e7360eb3ac5051e28c85",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "34a4fe1f_eef1717a",
        "filename": "lib/make.sh",
        "patchSetId": 4
      },
      "lineNbr": 853,
      "author": {
        "id": 1000072
      },
      "writtenOn": "2023-03-22T14:45:56Z",
      "side": 1,
      "message": "I\u0027ve tried to look at binutils\u0027 Makefiles but they are hard to follow. I guess that was Rob\u0027s knowledge. But it seems we can use \u0027check\u0027 safely.",
      "parentUuid": "e2f59531_1d29992a",
      "range": {
        "startLine": 853,
        "startChar": 20,
        "endLine": 853,
        "endChar": 33
      },
      "revId": "e98b6289e359a6b62062e7360eb3ac5051e28c85",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b87dfdca_8304c8e4",
        "filename": "lib/make.sh",
        "patchSetId": 4
      },
      "lineNbr": 853,
      "author": {
        "id": 1000072
      },
      "writtenOn": "2023-03-22T15:17:12Z",
      "side": 1,
      "message": "Finally confirmed it\u0027s a shortcut from \u0027make check\u0027, via check-recursive, which then invokes check-am.",
      "parentUuid": "34a4fe1f_eef1717a",
      "range": {
        "startLine": 853,
        "startChar": 20,
        "endLine": 853,
        "endChar": 33
      },
      "revId": "e98b6289e359a6b62062e7360eb3ac5051e28c85",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7dd77136_06ca7a35",
        "filename": "lib/make.sh",
        "patchSetId": 4
      },
      "lineNbr": 870,
      "author": {
        "id": 1000092
      },
      "writtenOn": "2023-03-22T10:45:49Z",
      "side": 1,
      "message": "I don\u0027t quite understand how this is supposed to work.  My current understanding is that ABE will fail if we pass an unfortunate set of .exp files that span several testsuites, e.g., g++ and libstdc++.  Or am I misunderstanding this?",
      "range": {
        "startLine": 870,
        "startChar": 9,
        "endLine": 870,
        "endChar": 47
      },
      "revId": "e98b6289e359a6b62062e7360eb3ac5051e28c85",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e416a5c_e6094b44",
        "filename": "lib/make.sh",
        "patchSetId": 4
      },
      "lineNbr": 870,
      "author": {
        "id": 1000072
      },
      "writtenOn": "2023-03-22T14:45:56Z",
      "side": 1,
      "message": "The idea is to report an error if we supply both gcc:foo.exp and g++:bar.exp as both belong to the same component.",
      "parentUuid": "7dd77136_06ca7a35",
      "range": {
        "startLine": 870,
        "startChar": 9,
        "endLine": 870,
        "endChar": 47
      },
      "revId": "e98b6289e359a6b62062e7360eb3ac5051e28c85",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57ff4911_25875a3c",
        "filename": "lib/make.sh",
        "patchSetId": 4
      },
      "lineNbr": 876,
      "author": {
        "id": 1000092
      },
      "writtenOn": "2023-03-22T10:45:49Z",
      "side": 1,
      "message": "We always set check_targets and dirs to a single element, we don\u0027t append to the list -- is this expected?",
      "range": {
        "startLine": 875,
        "startChar": 4,
        "endLine": 876,
        "endChar": 15
      },
      "revId": "e98b6289e359a6b62062e7360eb3ac5051e28c85",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80f4a487_1a012389",
        "filename": "lib/make.sh",
        "patchSetId": 4
      },
      "lineNbr": 976,
      "author": {
        "id": 1000092
      },
      "writtenOn": "2023-03-22T10:45:49Z",
      "side": 1,
      "message": "Could it be simpler if we convert this loop to iterate over tools?  Something like...\nfor exp in \"${runtestflags[@]}\"; do\n  tool\u003d$(extract_tool $exp)\n  dir\u003d$(choose_dir $tool)\n  tool2dir[$tool]\u003d\"$dir\"\n  tool2exps[$tool]\u003d\"${tool2exps[$tool]} $exp\"\ndone\n\nfor tool in \"${!tool2dir[@]}\"; do\n  dir\u003d\"${tool2dir[$tool]}\"\n  runtestflags_for_component\u003d\"${tool2exps[$tool]}\"\n  ...\ndone",
      "range": {
        "startLine": 976,
        "startChar": 4,
        "endLine": 976,
        "endChar": 20
      },
      "revId": "e98b6289e359a6b62062e7360eb3ac5051e28c85",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e0a21ed_5daecc61",
        "filename": "lib/make.sh",
        "patchSetId": 4
      },
      "lineNbr": 976,
      "author": {
        "id": 1000072
      },
      "writtenOn": "2023-03-22T14:45:56Z",
      "side": 1,
      "message": "I didn\u0027t want to make too intrusive changes, but yes, I think it would be better, and remove the restrictions above.",
      "parentUuid": "80f4a487_1a012389",
      "range": {
        "startLine": 976,
        "startChar": 4,
        "endLine": 976,
        "endChar": 20
      },
      "revId": "e98b6289e359a6b62062e7360eb3ac5051e28c85",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    }
  ]
}