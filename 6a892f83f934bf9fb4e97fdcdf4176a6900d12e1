{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a7f3335b_cef61729",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2023-03-14T02:21:17Z",
      "side": 1,
      "message": "Hello,\n\nThese are the changes in v3:\n- Changed to use validate_failures.py to detect whether a new testsuite run is needed, instead of incrementally merging sum files.\n- Added --ci-project and --ci-config options to find xfails file.\n- Use .0 extension for the original sum and log files instead of .1.\n- Use \"${sum/.sum/.log}\" form to find log file.\n- Fixed array expansions to use \"${array[@]}\" form.\n- Track which sum files where generated and use the list to merge them into one, instead of using a \u003ctool\u003e.sum.* glob which could catch files from a previous invocation of the script.",
      "revId": "6a892f83f934bf9fb4e97fdcdf4176a6900d12e1",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "736389e9_8281fdde",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000072
      },
      "writtenOn": "2023-03-14T09:44:02Z",
      "side": 1,
      "message": "LGTM.\n\nHow is the list of flaky tests maintained?",
      "revId": "6a892f83f934bf9fb4e97fdcdf4176a6900d12e1",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "162aaa4c_f92e43a3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000092
      },
      "writtenOn": "2023-03-14T10:59:59Z",
      "side": 1,
      "message": "Looks good, thanks!  The only nit-pick is about ci_project/ci_config.",
      "revId": "6a892f83f934bf9fb4e97fdcdf4176a6900d12e1",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a479842_fec55e61",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000092
      },
      "writtenOn": "2023-03-14T11:01:24Z",
      "side": 1,
      "message": "At the moment flaky lists are updated in https://git.linaro.org/toolchain/jenkins-scripts.git/tree/round-robin-bisect.sh#n106 , but I have plans on reworking that.",
      "parentUuid": "736389e9_8281fdde",
      "revId": "6a892f83f934bf9fb4e97fdcdf4176a6900d12e1",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "577d4d3b_fe9c31cb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2023-03-14T16:31:40Z",
      "side": 1,
      "message": "Thanks!",
      "parentUuid": "162aaa4c_f92e43a3",
      "revId": "6a892f83f934bf9fb4e97fdcdf4176a6900d12e1",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aacfc129_17e68e66",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2023-03-14T16:31:40Z",
      "side": 1,
      "message": "Thank you for your review comments!",
      "revId": "6a892f83f934bf9fb4e97fdcdf4176a6900d12e1",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "04a951b9_a3509a41",
        "filename": "lib/make.sh",
        "patchSetId": 3
      },
      "lineNbr": 854,
      "author": {
        "id": 1000092
      },
      "writtenOn": "2023-03-14T10:59:59Z",
      "side": 1,
      "message": "Please move this to tcwg_gnu-build.sh or round-robin.sh .  ABE is a doesn\u0027t need to know about ci_projects and ci_configs; it only needs the [optional] filename to read known failures from.",
      "range": {
        "startLine": 851,
        "startChar": 4,
        "endLine": 854,
        "endChar": 6
      },
      "revId": "6a892f83f934bf9fb4e97fdcdf4176a6900d12e1",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec6ae91b_201ea5ff",
        "filename": "lib/make.sh",
        "patchSetId": 3
      },
      "lineNbr": 854,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2023-03-14T16:31:40Z",
      "side": 1,
      "message": "Ok, will do.",
      "parentUuid": "04a951b9_a3509a41",
      "range": {
        "startLine": 851,
        "startChar": 4,
        "endLine": 854,
        "endChar": 6
      },
      "revId": "6a892f83f934bf9fb4e97fdcdf4176a6900d12e1",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c23d1c66_48a8f554",
        "filename": "lib/make.sh",
        "patchSetId": 3
      },
      "lineNbr": 876,
      "author": {
        "id": 1000092
      },
      "writtenOn": "2023-03-14T10:59:59Z",
      "side": 1,
      "message": "\"\u003d()\" is for declaration of normal bash arrays; to declare associative array use just \"local -A sums\".",
      "range": {
        "startLine": 876,
        "startChar": 14,
        "endLine": 876,
        "endChar": 17
      },
      "revId": "6a892f83f934bf9fb4e97fdcdf4176a6900d12e1",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "21acbbbd_a217169c",
        "filename": "lib/make.sh",
        "patchSetId": 3
      },
      "lineNbr": 876,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2023-03-14T16:31:40Z",
      "side": 1,
      "message": "Just \"local -A sums\" isn\u0027t sufficient because I need the array to be empty at each iteration of the for loop it\u0027s in, and \"local\" doesn\u0027t change the value of a variable that already exists.\n\nI believe () can be used both for indexed arrays and associative arrays. From the bash manual:\n\n\"When assigning to an associative array, the words in a compound assignment may be either assignment statements, for which the subscript is required, or a list of words that is interpreted as a sequence of alternating keys and values: name\u003d(key1 value1 key2 value2 … ). These are treated identically to name\u003d( [key1]\u003dvalue1 [key2]\u003dvalue2 … ).\"\n— https://www.gnu.org/software/bash/manual/html_node/Arrays.html",
      "parentUuid": "c23d1c66_48a8f554",
      "range": {
        "startLine": 876,
        "startChar": 14,
        "endLine": 876,
        "endChar": 17
      },
      "revId": "6a892f83f934bf9fb4e97fdcdf4176a6900d12e1",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc182b67_18f04b1f",
        "filename": "lib/make.sh",
        "patchSetId": 3
      },
      "lineNbr": 913,
      "author": {
        "id": 1000092
      },
      "writtenOn": "2023-03-14T10:59:59Z",
      "side": 1,
      "message": "Did you confirm that binutils/gcc/gdb do not clean testsuite directories before running the testsuite?  Are *.$try files survive till the end?",
      "range": {
        "startLine": 913,
        "startChar": 2,
        "endLine": 913,
        "endChar": 27
      },
      "revId": "6a892f83f934bf9fb4e97fdcdf4176a6900d12e1",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2883270c_4ae0e528",
        "filename": "lib/make.sh",
        "patchSetId": 3
      },
      "lineNbr": 913,
      "author": {
        "id": 1000534
      },
      "writtenOn": "2023-03-14T16:31:40Z",
      "side": 1,
      "message": "Yes. When successively running ABE to test these changes, old *.$try files accumulate for both binutils and GDB. I haven\u0027t tested GCC with these changes.",
      "parentUuid": "fc182b67_18f04b1f",
      "range": {
        "startLine": 913,
        "startChar": 2,
        "endLine": 913,
        "endChar": 27
      },
      "revId": "6a892f83f934bf9fb4e97fdcdf4176a6900d12e1",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    }
  ]
}