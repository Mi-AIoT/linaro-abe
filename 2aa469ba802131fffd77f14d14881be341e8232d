{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "de5bc86a_2dc89257",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1000072
      },
      "writtenOn": "2024-05-31T09:13:31Z",
      "side": 1,
      "message": "Do you mean failures?",
      "revId": "2aa469ba802131fffd77f14d14881be341e8232d",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3771901c_5c8f7e26",
        "filename": "lib/configure.sh",
        "patchSetId": 1
      },
      "lineNbr": 179,
      "author": {
        "id": 1000072
      },
      "writtenOn": "2024-05-31T09:13:31Z",
      "side": 1,
      "message": "I\u0027m not sure to understand...\nThis always sets CXX, which should always point to a non-existing file, except if there\u0027s a previous build already present in ${prefix} ?\nIn general we build stage1, glibc, stage2, so when we build glibc, ${target}-g++ is normally absent. Do I understand correctly?\nSo, are there cases where we\u0027ll actually define CXX to something that exists?\n(and if no, how can we run glibc\u0027s tests if they require a valid CXX?)",
      "range": {
        "startLine": 179,
        "startChar": 0,
        "endLine": 179,
        "endChar": 81
      },
      "revId": "2aa469ba802131fffd77f14d14881be341e8232d",
      "serverId": "f33910f19b7abb192b83adbd000000bf"
    }
  ]
}