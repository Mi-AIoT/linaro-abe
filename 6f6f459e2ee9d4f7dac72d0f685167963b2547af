{
  "comments": [
    {
      "key": {
        "uuid": "3a4c51b2_bfcd3389",
        "filename": "configure.ac",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1000072
      },
      "writtenOn": "2015-11-24T20:28:51Z",
      "side": 1,
      "message": "Are we sure to have the right gcc in the path at this point?\nI mean if we are in a i686 container, are we sure gcc is not pointing to the x86_64 gcc?\n\nFor instance, on my x86_64:\n$ gcc -dumpmachine\nx86_64-linux-gnu\n$ setarch i386 gcc -dumpmachine\nbut\n$ setarch i386 uname -m\ni686\n\nIt seems to me that this relies on the PATH to be right. I guess it\u0027d better be right, but isn\u0027t this fragile?",
      "revId": "6f6f459e2ee9d4f7dac72d0f685167963b2547af",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a494da4_3e8f6525",
        "filename": "configure.ac",
        "patchSetId": 1
      },
      "lineNbr": 61,
      "author": {
        "id": 1000040
      },
      "writtenOn": "2015-12-08T23:38:29Z",
      "side": 1,
      "message": "If GCC isn\u0027t in the PATH anyway, it\u0027d never work, so isn\u0027t really fragile. What it does do is it get the build architecture right when running in a foreign container.",
      "parentUuid": "3a4c51b2_bfcd3389",
      "revId": "6f6f459e2ee9d4f7dac72d0f685167963b2547af",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a4c51b2_1fbf07d2",
        "filename": "lib/make.sh",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1000072
      },
      "writtenOn": "2015-11-24T20:28:51Z",
      "side": 1,
      "message": "Isn\u0027t this going to start a shell, and wait forever?",
      "range": {
        "startLine": 354,
        "startChar": 9,
        "endLine": 354,
        "endChar": 13
      },
      "revId": "6f6f459e2ee9d4f7dac72d0f685167963b2547af",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a4c51b2_c2e66616",
        "filename": "lib/make.sh",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1000040
      },
      "writtenOn": "2015-11-25T16:51:05Z",
      "side": 1,
      "message": "No, the setarch commands returns immediately. All it does is make uname return the correct architecture, which is required for configure to work right.",
      "parentUuid": "3a4c51b2_1fbf07d2",
      "range": {
        "startLine": 354,
        "startChar": 9,
        "endLine": 354,
        "endChar": 13
      },
      "revId": "6f6f459e2ee9d4f7dac72d0f685167963b2547af",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a4c51b2_e2ed62f1",
        "filename": "lib/make.sh",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1000072
      },
      "writtenOn": "2015-11-25T16:56:54Z",
      "side": 1,
      "message": "Ha. Then it doesn\u0027t match the description in the manpage, nor this sample script:\n#!/bin/bash\necho 1\nsetarch i386\necho 2\n\nWhen I execute this from my shell, it prints \"1\", and then starts another shell, waiting for me to exit it, and only then prints \"2\".",
      "parentUuid": "3a4c51b2_c2e66616",
      "range": {
        "startLine": 354,
        "startChar": 9,
        "endLine": 354,
        "endChar": 13
      },
      "revId": "6f6f459e2ee9d4f7dac72d0f685167963b2547af",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a494da4_fec33d36",
        "filename": "lib/make.sh",
        "patchSetId": 1
      },
      "lineNbr": 354,
      "author": {
        "id": 1000072
      },
      "writtenOn": "2015-12-09T09:45:18Z",
      "side": 1,
      "message": "Sorry to insist, here. I have patched abe to force\nhost\u003di386-linux-gnu\nset -x\nright before this test.\n\nI ran ../abe.sh --target arm-none-eabi --build all and it just stopped on:\n+ setarch i386\n$\n\n[and it waits for me to hit ^D]\n\nI ran this command on ex40-01, not using any schroot. I just forced host\u003di386-linux-gnu to force abe to reach the setarch statement.",
      "parentUuid": "3a4c51b2_e2ed62f1",
      "range": {
        "startLine": 354,
        "startChar": 9,
        "endLine": 354,
        "endChar": 13
      },
      "revId": "6f6f459e2ee9d4f7dac72d0f685167963b2547af",
      "serverId": "f33910f19b7abb192b83adbd000000bf",
      "unresolved": false
    }
  ]
}