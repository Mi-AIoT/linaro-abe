# This is a list of other components need to build this component
depends="gmp mpfr mpc linux binutils"

# This is the latest version of this toolchain component
installs="gcc"

# This is a file that gets installed that is used to determine if the toolchain
# component is already installed.
latest="linaro-4.8-2013.08"

# If yes, only static linking will be used
static_link=yes

# This is a list of default flags always supplied to configure
default_configure_flags="--with-pkgversion=${USER}  --with-bugurl=https://bugs.launchpad.net/gcc-linaro --with-mpc=${local_builds}/${host} --with-mpfr=${local_builds}${host} --with-gmp=${local_builds}${host} --with-gnu-as --with-gnu-ld --with-system-zlib --enable-languages=c"

# --with-as=${local_builds}/bin/${target}-as --with-ld=${local_builds}/bin/${target}-ld 

# Disable the Graphite loop optimizer for now
default_configure_flags="${default_configure_flags} --with-cloog=no --with-ppl=no --with-isl=no"
# default_configure_flags="${default_configure_flags} --with-ppl=${local_builds} --with-cloog=${local_builds} --with-isl=${local_builds}"

# Libgomp is for shared memory parallel programming, so we disable it
default_configure_flags="${default_configure_flags} --disable-libgomp"

default_configure_flags="${default_configure_flags} --disable-nls"

# While testing, disable multilibs
#default_configure_flags="${default_configure_flags} --enable-multilib"

# enable multiarch
default_configure_flags="${default_configure_flags} --enable-multiarch"

# libssp does stack protection
#default_configure_flags="${default_configure_flags} --enable-libssp"

# C99 is the latest standard, and has improved numerics support
# http://en.wikipedia.org/wiki/C99
default_configure_flags="${default_configure_flags} --enable-c99"

#default_configure_flags="${default_configure_flags} --disable-libsanitizer"

# Used by fortran
# http://gcc.gnu.org/onlinedocs/libquadmath/
# default_configure_flags="${default_configure_flags} --disable-libquadmath"

# Transactional Memory, used for threading
# http://gcc.gnu.org/wiki/TransactionalMemory
#default_configure_flags="${default_configure_flags} --disable-libitm"

# Libatomic is a synchronization library	     
# http://www.hpl.hp.com/research/linux/atomic_ops/
#default_configure_flags="${default_configure_flags} --disable-libatomic"

# For a cross build, we need the target as part of the name for to find the correct.
# assembler and linker. We also disable bootstrapping for cross builds
if test x"${build}" != x"${target}"; then
   # These next libraries suffer from the dreaded GCC_NO_EXECUTABLES macros for Autoconf,
   # which prevents these from being able to be cross configured.
   gcc_no_executables="--disable-libssp --disable-libquadmath"
   # stage1_flags are used to build the initial C compiler, which is used to compile
   # the C library. We disable most everything, as the second GCC build will be
   # able to use the C library built with the first GCC build.
   stage1_flags=" --disable-threads  --without-headers --with-newlib --disable-libmudflap --disable-bootstrap --disable-decimal-float --disable-libatomic --disable-libsanitizer --disable-plugins --disable-libitm ${gcc_no_executables} --enable-multilib --with-sysroot=${sysroots} --enable-languages=c"
   stage2_flags="--enable-multilib --enable-threads=posix --disable-bootstrap --enable-libmudflap ${gcc_no_executables} CFLAGS_FOR_TARGET=-static --with-build-sysroot=${sysroots} --with-sysroot=${sysroots} --enable-languages=c,c++"
   # Add platform specific flags
    case ${target} in
	arm*-none-linux-gnueabi)
	    default_configure_flags="${default_configure_flags} --with-arch=armv7-a --with-fpu=vfpv3-d16 --with-float=softfp --with-thumb"
	    clibrary=eglibc
	    need_qemu=yes
	    ;;
	arm*-hisiv300-linux-gnueabi)
	    default_configure_flags="${default_configure_flags} --with-arch=armv5te --enable-__cxa_atexit --enable-multilib --enable-extra-hisi-multilibs --enable-poison-system-directories"
	    clibrary=eglibc
	    need_qemu=yes
	    ;;
	arm*-*-linux-gnueabihf)
	    default_configure_flags="${default_configure_flags} --with-arch=armv7-a --with-fpu=vfpv3-d16 --with-float=hard --with-thumb"
	    clibrary=eglibc
	    need_qemu=yes
	    ;;
	arm*-*-eabi | aarch64*-*-elf)
	    default_configure_flags="${default_configure_flags} --with-newlib"
	    clibrary=newlib
	    need_qemu=no
	    ;;
	aarch64*-*-linux-gnu)
	    default_configure_flags="${default_configure_flags} --with-sysroot=${sysroots}/${target}"
	    # --disable-silent-rules --disable-dependency-tracking --with-libtool-sysroot=/mnt/ci_build/workspace/openembedded-armv8-rootfs/label/oe_persistent_cloud/rootfs/lamp/build/tmp-eglibc/sysroots/genericarmv8 --enable-threads=posix --enable-multilib --enable-c99 --enable-long-long --enable-symvers=gnu --enable-libstdcxx-pch --program-prefix=aarch64-oe-linux- --without-local-prefix --enable-target-optspace --enable-lto --enable-libssp --disable-bootstrap --disable-libgomp --disable-libmudflap --with-system-zlib --with-linker-hash-style=gnu --with-ppl=no --with-cloog=no --enable-checking=release --enable-cheaders=c_global --with-sysroot=/ --with-build-sysroot=/mnt/ci_build/workspace/openembedded-armv8-rootfs/label/oe_persistent_cloud/rootfs/lamp/build/tmp-eglibc/sysroots/genericarmv8 --with-native-system-header-dir=/mnt/ci_build/workspace/openembedded-armv8-rootfs/label/oe_persistent_cloud/rootfs/lamp/build/tmp-eglibc/sysroots/genericarmv8/usr/include --with-gxx-include-dir=/usr/include/c++/ --enable-nls --enable-__cxa_atexit  --enable-long-long
	    clibrary=eglibc
	    need_qemu=no
	    ;;
	*)
	    clibrary=eglibc
	    need_qemu=no
	    ;;
    esac
   
# native builds are easy
  else
	default_configure_flags="${default_configure_flags} --enable-bootstrap --enable-multilib --enable-multiarch --enable-threads=posix --enable-bootstrap --enable-libmudflap --with-build-sysroot=/ --enable-languages=c,c++,fortran,objc"
  	stage1_flags=""
  	stage2_flags=""
fi	 

# This is a list of default flags always supplied to "make check".
# --xml produces XML files suitable for importing into a MySQL
runtest_flags=""

